!function(t,a){for(var e in a)t[e]=a[e]}(exports,function(t){var a={};function e(o){if(a[o])return a[o].exports;var s=a[o]={i:o,l:!1,exports:{}};return t[o].call(s.exports,s,s.exports,e),s.l=!0,s.exports}return e.m=t,e.c=a,e.d=function(t,a,o){e.o(t,a)||Object.defineProperty(t,a,{enumerable:!0,get:o})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,a){if(1&a&&(t=e(t)),8&a)return t;if(4&a&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&a&&"string"!=typeof t)for(var s in t)e.d(o,s,function(a){return t[a]}.bind(null,s));return o},e.n=function(t){var a=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(a,"a",a),a},e.o=function(t,a){return Object.prototype.hasOwnProperty.call(t,a)},e.p="",e(e.s=8)}([function(t,a){t.exports={MESSAGE_ERROR:{REQUIRED_FIELDS:"Existe(m) campo(s) obrigatório(s) que deve(m) ser preenchido(s)! ",INVALID_EMAIL:"O email informado não é valido",CONTENT_TYPE:"O cabeçalho da requisição não possui um Content-type válido!",EMPTY_BODY:"O body da requisição não pode ser vazio!",NOT_FOUND_DB:"Não foram encontrados registros no banco de dados",INTERNAL_ERROR_DB:"Não foi possivel realizar a operação com o banco de dados",REQUIRED_ID:"O id do registro é obrigatório nesse tipo de requisição",AUTENTICATE_ERROR:"Senha ou login estão incorretos",EXISTING_USER:"Este usuário já existe"},MESSAGE_SUCCESS:{INSERT_ITEM:"Item criado com sucesso no Banco de Dados",UPDATE_ITEM:"Item atualizado com sucesso no Banco de Dados",DELETE_ITEM:"Item deletado com sucesso no Banco de Dados",AUTENTICATE_SUCCESS:"Usuário autenticado com sucesso"}}},function(t,a){t.exports=require("@prisma/client")},function(t,a,e){const{PrismaClient:o}=e(1),s=new o;t.exports={selectAllTiposPizza:async()=>{const t=await s.$queryRawUnsafe("select * from tbl_tipo_pizza");return t.length>0&&t},selectAllTiposBebidas:async()=>{const t=await s.$queryRawUnsafe("select * from tbl_tipo_bebida");return t.length>0&&t},addTipoPizza:async t=>{try{const a=`insert into tbl_tipo_pizza(tipo) values ('${t.nome}')`;return!!await s.$executeRawUnsafe(a)}catch(t){return!1}},addTipoBebida:async t=>{try{const a=`insert into tbl_tipo_bebida(tipo) values ('${t.nome}')`;return!!await s.$executeRawUnsafe(a)}catch(t){return!1}}}},function(t,a){t.exports=require("express")},function(t,a,e){const{MESSAGE_ERROR:o,MESSAGE_SUCCESS:s}=e(0),n=e(5);t.exports={listarMenssagens:async()=>{let t={};const a=await n.selectAllMessages();return a?(t.message=a,t.status=200):(t.message=o.NOT_FOUND_DB,t.status=404),t},novaMensagem:async t=>{if(null==t.nome||""==t.nome||""==t.email||null==t.email||""==t.texto||null==t.texto)return{status:400,message:o.REQUIRED_FIELDS};if(t.email.includes("@")){return await n.insertMessages(t)?{status:201,message:s.INSERT_ITEM}:{status:500,message:o.INTERNAL_ERROR_DB}}return{status:400,message:o.INVALID_EMAIL}},excluirMensagem:async t=>{if(""==t||null==t)return{status:400,MESSAGE:o.REQUIRED_ID};if(await n.selectMessageById(t)){const a=e(5);return await a.deleteMessage(t)?{status:201,message:s.DELETE_ITEM}:{status:500,message:o.INTERNAL_ERROR_DB}}return{status:404,message:o.NOT_FOUND_DB}}}},function(t,a,e){const{PrismaClient:o}=e(1),s=new o;t.exports={selectAllMessages:async()=>{const t=await s.$queryRawUnsafe("select * from tbl_mensagem order by id desc");return t.length>0&&t},insertMessages:async t=>{try{let a=`insert into tbl_mensagem(texto, nome, email)\n                        values( \n                            '${t.texto}',\n                            '${t.nome}',\n                            '${t.email}'\n                        )`;return!!await s.$executeRawUnsafe(a)}catch(t){return!1}},deleteMessage:async t=>{try{let a=`delete from tbl_mensagem\n                                where id = '${t}'`;return!!await s.$executeRawUnsafe(a)}catch(t){return!1}},selectMessageById:async t=>{const a="select * from tbl_mensagem where id = "+t,e=await s.$queryRawUnsafe(a);return e.length>0&&e}}},function(t,a,e){const{MESSAGE_ERROR:o,MESSAGE_SUCCESS:s}=e(0),n=e(17);t.exports={listarUsuarios:async()=>{let t={};const a=await n.selectAllUsers();return a?(t.message=a,t.status=200):(t.message=o.NOT_FOUND_DB,t.status=404),t},novoUser:async t=>{if(null==t.login||""==t.login||""==t.senha||null==t.senha)return{status:400,message:o.REQUIRED_FIELDS};if(await n.searchLogin(t.login))return{status:400,message:o.EXISTING_USER};return await n.insertUser(t)?{status:201,message:s.INSERT_ITEM}:{status:500,message:o.INTERNAL_ERROR_DB}},excluirUsuario:async t=>{if(""==t||null==t)return{status:400,MESSAGE:o.REQUIRED_ID};if(await n.selectUserById(t)){return await n.deleteUser(t)?{status:201,message:s.DELETE_ITEM}:{status:500,message:o.INTERNAL_ERROR_DB}}return{status:404,message:o.NOT_FOUND_DB}},updateUser:async t=>{if(""==t.id||null==t.id)return{status:400,MESSAGE:o.REQUIRED_ID};if(null==t.login||""==t.login||""==t.senha||null==t.senha)return{status:400,message:o.REQUIRED_FIELDS};return await n.updateUser(t)?{status:201,message:s.UPDATE_ITEM}:{status:500,message:o.INTERNAL_ERROR_DB}},buscarUser:async function(t){if(null==t||""==t)return{status:400,message:o.REQUIRED_ID};const a=await n.selectUserById(t);return!!a&&{status:200,message:a}},autenticar:async function(t){const a=e(7);if(null==t.senha||""==t.senha||null==t.login||""==t.senha)return{status:400,message:o.REQUIRED_FIELDS};const s=await n.autenticateUser(t);if(s){let t=await a.createJWT(s[0].id);return s[0].token=t,{status:200,message:s}}return{status:404,message:o.AUTENTICATE_ERROR}}}},function(t,a,e){const o=e(18);t.exports={createJWT:async function(t){return o.sign({userID:t},"a1b2c3",{expiresIn:60})},validateJWT:async function(t){let a=!1;return o.verify(t,"a1b2c3",(async function(t,e){t||(a=!0)})),a}}},function(t,a,e){const o=e(3),s=e(9),n=e(10),i=o(),r=e(11),u=e(4),d=e(12),l=e(15),_=e(6),{MESSAGE_ERROR:c,MESSAGE_SUCCESS:p}=e(0),{response:m}=e(3);i.use((t,a,e)=>{a.header("Acess-Control-Allow-Origin","*"),a.header("Acess-Control-Allow-Methods","GET, POST, PUT, DELETE, OPTIONS"),i.use(s()),e()});const b=n.json();i.get("/.netlify/functions/api/v1/tipo/pizza",s(),async(t,a,e)=>{const o=await r.listarTiposPizza();a.status(o.status),a.json(o)}),i.get("/.netlify/functions/api/v1/tipo/bebida",s(),async(t,a,e)=>{const o=await r.listarTiposBebidas();a.status(o.status),a.json(o)}),i.get("/.netlify/functions/api/v1/mensagem",s(),async(t,a,e)=>{const o=await u.listarMenssagens();a.status(o.status),a.json(o)}),i.get("/.netlify/functions/api/v1/produtos/pizza",s(),async(t,a,e)=>{const o=await d.listarPizzas();a.status(o.status),a.json(o)}),i.get("/.netlify/functions/api/v1/produtos/bebida",s(),async(t,a,e)=>{const o=await d.listarBebidas();a.status(o.status),a.json(o)}),i.get("/.netlify/functions/api/v1/produtos/tamanho",s(),async(t,a,e)=>{const o=await l.listarTamanhos();a.status(o.status),a.json(o)}),i.get("/.netlify/functions/api/v1/usuario",s(),async(t,a,e)=>{const o=await _.listarUsuarios();a.status(o.status),a.json(o)}),i.get("/.netlify/functions/api/v1/produtos/favoritos",s(),async(t,a,e)=>{const o=await d.listarFavoritos();a.status(o.status),a.json(o)}),i.get("/.netlify/functions/api/v1/produtos/promocoes",s(),async(t,a,e)=>{const o=await d.listarPromocoes();a.status(o.status),a.json(o)}),i.post("/.netlify/functions/api/v1/user/login",s(),b,async(t,a,e)=>{let o,s;if("application/json"==t.headers["content-type"]){let a=t.body;if("{}"!=JSON.stringify(a)){const t=await _.autenticar(a);o=t.status,s=t.message}else o=400,s=c.EMPTY_BODY}else o=415,s=c.CONTENT_TYPE;a.status(o),a.json(s)}),i.get("/.netlify/functions/api/v1/produtos/ativo/:tipo",s(),async(t,a,e)=>{const o=t.params.tipo,s=await d.listarInativos(o);a.status(s.status),a.json(s)}),i.get("/.netlify/functions/api/v1/usuario/:id",s(),(async function(t,a){let e,o,s=t.params.id;if(""!=s&&null!=s){const t=await _.buscarUser(s);t?(e=t.status,o=t.message):(e=404,o=c.NOT_FOUND_DB)}else e=400,o=c.REQUIRED_ID;a.json(o),a.status(e)})),i.get("/.netlify/functions/api/v1/produtos/pizza/:id",s(),(async function(t,a){let e,o,s=t.params.id;if(""!=s&&null!=s){const t=await d.buscarPizza(s);t?(e=t.status,o=t.message):(e=404,o=c.NOT_FOUND_DB)}else e=400,o=c.REQUIRED_ID;a.json(o),a.status(e)})),i.get("/.netlify/functions/api/v1/produtos/bebida/:id",s(),(async function(t,a){let e,o,s=t.params.id;if(""!=s&&null!=s){const t=await d.buscarBebida(s);t?(e=t.status,o=t.message):(e=404,o=c.NOT_FOUND_DB)}else e=400,o=c.REQUIRED_ID;a.json(o),a.status(e)})),i.post("/.netlify/functions/api/v1/produtos/pizza",s(),b,async(t,a,e)=>{let o,s;if("application/json"==t.headers["content-type"]){let a=t.body;if("{}"!=JSON.stringify(a)){const t=await d.novaPizza(a);o=t.status,s=t.message}else o=400,s=c.EMPTY_BODY}else o=415,s=c.CONTENT_TYPE;a.status(o),a.json(s)}),i.post("/.netlify/functions/api/v1/produtos/bebida",s(),b,async(t,a,e)=>{let o,s;if("application/json"==t.headers["content-type"]){let a=t.body;if("{}"!=JSON.stringify(a)){const t=await d.novaBebida(a);o=t.status,s=t.message}else o=400,s=c.EMPTY_BODY}else o=415,s=c.CONTENT_TYPE;a.status(o),a.json(s)}),i.post("/.netlify/functions/api/v1/mensagem",s(),b,async(t,a,e)=>{let o,s;if("application/json"==t.headers["content-type"]){let a=t.body;if("{}"!=JSON.stringify(a)){const t=await u.novaMensagem(a);o=t.status,s=t.message}else o=400,s=c.EMPTY_BODY}else o=415,s=c.CONTENT_TYPE;a.status(o),a.json(s)}),i.post("/.netlify/functions/api/v1/usuario",s(),b,async(t,a,e)=>{let o,s;if("application/json"==t.headers["content-type"]){let a=t.body;if("{}"!=JSON.stringify(a)){const t=await _.novoUser(a);o=t.status,s=t.message}else o=400,s=c.EMPTY_BODY}else o=415,s=c.CONTENT_TYPE;a.status(o),a.json(s)}),i.post("/.netlify/functions/api/v1/tipo/pizza",s(),b,async(t,a,e)=>{let o,s;if("application/json"==t.headers["content-type"]){let a=t.body;if("{}"!=JSON.stringify(a)){const t=await r.inserirTipoPizza(a);o=t.status,s=t.message}else o=400,s=c.EMPTY_BODY}else o=415,s=c.CONTENT_TYPE;a.status(o),a.json(s)}),i.post("/.netlify/functions/api/v1/tipo/bebida",s(),b,async(t,a,e)=>{let o,s;if("application/json"==t.headers["content-type"]){let a=t.body;if("{}"!=JSON.stringify(a)){const t=await r.inserirTipoBebida(a);o=t.status,s=t.message}else o=400,s=c.EMPTY_BODY}else o=415,s=c.CONTENT_TYPE;a.status(o),a.json(s)}),i.post("/.netlify/functions/api/v1/produto/tamanho/:id",s(),b,(async function(t,a){let e,o,s=t.headers["content-type"],n=t.params.id;if("application/json"==s){let a=t.body;if("{}"!=JSON.stringify(a)){if(null!=n&&""!=n){a.id=n;const t=await d.inserirTamanho(a);e=t.status,o=t.message}}else e=400,o=c.EMPTY_BODY}else e=415,o=c.CONTENT_TYPE;a.status(e),a.json(o)})),i.delete("/.netlify/functions/api/v1/mensagem/:id",s(),b,(async function(t,a){let o,s,n=t.params.id;if(""!=n&&null!=n){const t=e(4),a=await t.excluirMensagem(n);o=a.status,s=a.message}else o=400,s=c.REQUIRED_ID;a.status(o),a.json(s)})),i.delete("/.netlify/functions/api/v1/usuario/:id",s(),b,(async function(t,a){let o,s,n=t.params.id;if(""!=n&&null!=n){const t=e(6),a=await t.excluirUsuario(n);o=a.status,s=a.message}else o=400,s=c.REQUIRED_ID;a.status(o),a.json(s)})),i.delete("/.netlify/functions/api/v1/produto/tamanho/:id/:idTamanho",s(),b,(async function(t,a,e){let o,s,n=t.params.id,i=t.params.idTamanho;if(""!=n&&null!=n&&""!=i&&null!=i){const t=await d.deletarProdutoTamanho(n,i);o=t.status,s=t.message}else o=400,s=c.REQUIRED_ID;a.status(o),a.json(s)})),i.put("/.netlify/functions/api/v1/produtos/:id",s(),b,(async function(t,a){let e,o,s=t.params.id;if(""!=s&&null!=s){const t=await d.deletarProduto(s);console.log(t),e=t.status,o=t.message}else e=400,o=c.REQUIRED_ID;a.status(e),a.json(o)})),i.put("/.netlify/functions/api/v1/produtos/pizza/:id",s(),b,async(t,a,e)=>{let o,s,n=t.headers["content-type"],i=t.params.id;if("application/json"==n){let a=t.body;if("{}"!=JSON.stringify(a))if(null!=i&&""!=i){a.id_pizza=i;const t=await d.atualizarPizza(a);o=t.status,s=t.message}else o=400,s=c.REQUIRED_ID;else o=400,s=c.EMPTY_BODY}else o=415,s=c.CONTENT_TYPE;a.status(o),a.json(s)}),i.put("/.netlify/functions/api/v1/produtos/bebida/:id",s(),b,async(t,a,e)=>{let o,s,n=t.headers["content-type"],i=t.params.id;if("application/json"==n){let a=t.body;if("{}"!=JSON.stringify(a))if(null!=i&&""!=i){a.id_bebida=i;const t=await d.atualizarBebida(a);o=t.status,s=t.message}else o=400,s=c.REQUIRED_ID;else o=400,s=c.EMPTY_BODY}else o=415,s=c.CONTENT_TYPE;a.status(o),a.json(s)}),i.put("/.netlify/functions/api/v1/usuario/:id",s(),b,async(t,a,e)=>{let o,s,n;if(n=t.headers["content-type"],"application/json"==n){let a=t.body;if("{}"!=JSON.stringify(a)){let e=t.params.id;if(""!=e&&null!=e){a.id=e;const t=await _.updateUser(a);o=t.status,s=t.message}else o=400,s=c.REQUIRED_ID}else o=400,s=c.EMPTY_BODY}else o=415,s=c.CONTENT_TYPE;a.status(o),a.json(s)}),i.put("/.netlify/functions/api/v1/produtos/favoritos/:id",s(),b,async(t,a,e)=>{let o,s,n=t.params.id;if(null!=n&&""!=n){const t=await d.adicionarFavorito(n);o=t.status,s=t.message}else o=400,s=c.REQUIRED_ID;a.status(o),a.json(s)}),t.exports=i},function(t,a){t.exports=require("cors")},function(t,a){t.exports=require("body-parser")},function(t,a,e){const{MESSAGE_ERROR:o,MESSAGE_SUCCESS:s}=e(0);t.exports={listarTiposPizza:async()=>{let t={};const{selectAllTiposPizza:a,addTipoBebida:s}=e(2),n=await a();return n?(t.message=n,t.status=200):(t.message=o.NOT_FOUND_DB,t.status=404),t},listarTiposBebidas:async()=>{let t={};const{selectAllTiposBebidas:a}=e(2),s=await a();return s?(t.message=s,t.status=200):(t.message=o.NOT_FOUND_DB,t.status=404),t},inserirTipoPizza:async t=>{if(null==t.nome||""==t.nome)return{status:400,message:o.REQUIRED_FIELDS};const{addTipoPizza:a}=e(2);return await a(t)?{status:200,message:s.INSERT_ITEM}:{status:500,message:o.INTERNAL_ERROR_DB}},inserirTipoBebida:async t=>{if(null==t.nome||""==t.nome)return{status:400,message:o.REQUIRED_FIELDS};const{addTipoBebida:a}=e(2);return await a(t)?{status:200,message:s.INSERT_ITEM}:{status:500,message:o.INTERNAL_ERROR_DB}}}},function(t,a,e){const{MESSAGE_ERROR:o,MESSAGE_SUCCESS:s}=e(0),n=e(13),i=e(14);e(3);t.exports={listarPizzas:async()=>{let t={};const a=await n.selectAllPizzas();return a?(t.message=a,t.status=200):(t.message=o.NOT_FOUND_DB,t.status=404),t},listarBebidas:async()=>{let t={};const a=await n.selectAllBebidas();return a?(t.message=a,t.status=200):(t.message=o.NOT_FOUND_DB,t.status=404),t},novaPizza:async t=>{if(null==t.id_tamanho||""==t.id_tamanho||null==t.id_tipo_pizza||""==t.id_tipo_pizza||null==t.nome||""==t.nome||null==t.descricao||""==t.descricao||null==t.imagem||""==t.imagem||null==t.desconto||""==t.desconto)return{status:400,message:o.REQUIRED_FIELDS};if(!await n.insertProduto(t))return{message:o.INTERNAL_SERVER_ERROR,status:500};{const a=await n.selectLastIdProduto();if(a>0){let e={id_produto:a,id_tamanho:t.id_tamanho,desconto:t.desconto,id_tipo_pizza:t.id_tipo_pizza};return await n.insertPizza(e)?(t.id_tamanho.forEach(async t=>{e.id_tamanho=t;if(!await i.inserirProdutoTamanho(e))return await n.deleteProduto(a),{status:500,message:o.INTERNAL_ERROR_DB}}),{status:200,message:s.INSERT_ITEM}):(await n.deleteProduto(a),{status:500,message:o.INTERNAL_ERROR_DB})}}},novaBebida:async t=>{if(null==t.id_tamanho||""==t.id_tamanho||null==t.id_tipo_bebida||""==t.id_tipo_bebida||null==t.nome||""==t.nome||null==t.descricao||""==t.descricao||null==t.imagem||""==t.imagem)return{status:400,message:o.REQUIRED_FIELDS};if(!await n.insertProduto(t))return{message:o.INTERNAL_SERVER_ERROR,status:500};{const a=await n.selectLastIdProduto();if(a>0){let e={id_produto:a,id_tamanho:t.id_tamanho,id_tipo_bebida:t.id_tipo_bebida,teor_alcoolico:t.teor_alcoolico,desconto:t.desconto};if(await n.insertBebida(e)){let r=!1;return t.id_tamanho.forEach(async t=>{if(e.id_tamanho=t,r=await i.inserirProdutoTamanho(e),!r)return await n.deleteProduto(a),{status:500,message:o.INTERNAL_ERROR_DB}}),{status:200,message:s.INSERT_ITEM}}return await n.deleteProduto(a),{status:500,message:o.INTERNAL_ERROR_DB}}}},atualizarPizza:async t=>{if(null==t.id_produto||""==t.id_produto||null==t.id_tipo_pizza||""==t.id_tipo_pizza||null==t.nome||""==t.nome||null==t.descricao||""==t.descricao||null==t.imagem||""==t.imagem)return{status:400,message:o.REQUIRED_FIELDS};if(""==t.id_pizza||null==t.id_pizza)return{status:400,message:o.REQUIRED_ID};if(await n.selectPizzaById(t.id_pizza)){const a=await n.updateProduto(t);console.log(a);let e=0,i=!1;t.preco.forEach(async a=>{const o={preco:a.preco,desconto:a.desconto,id_produto:t.id_produto,id_tamanho:a.id_tamanho};e=await n.updateTamanho(o),e&&(i=!0)});return await n.updatePizza(t)||a||i?{status:200,message:s.UPDATE_ITEM}:{message:o.INTERNAL_SERVER_ERROR,status:500}}return{message:o.NOT_FOUND_DB,status:404}},buscarPizza:async t=>{if(null==t||""==t)return{status:400,message:o.REQUIRED_ID};const a=await n.selectPizzaById(t);return!!a&&{status:200,message:a}},buscarBebida:async t=>{if(null==t||""==t)return{status:400,message:o.REQUIRED_ID};const a=await n.selectBebidaById(t);return!!a&&{status:200,message:a}},atualizarBebida:async t=>{if(null==t.id_produto||""==t.id_produto||null==t.id_tipo_bebida||""==t.id_tipo_bebida||null==t.nome||""==t.nome||null==t.preco||""==t.preco||null==t.descricao||""==t.descricao||null==t.imagem||""==t.imagem)return{status:400,message:o.REQUIRED_FIELDS};if(""==t.id_bebida||null==t.id_bebida)return{status:400,message:o.REQUIRED_ID};if(await n.selectBebidaById(t.id_bebida)){const a=await n.updateProduto(t);let e=0,i=!1;t.preco.forEach(async a=>{const o={preco:a.preco,desconto:a.desconto,id_produto:t.id_produto,id_tamanho:a.id_tamanho};e=await n.updateTamanho(o),e&&(i=!0)});return await n.updateBebida(t)||a||i?{status:200,message:s.UPDATE_ITEM}:{message:o.INTERNAL_SERVER_ERROR,status:500}}return{message:o.NOT_FOUND_DB,status:404}},listarFavoritos:async()=>{let t={};const a=await n.selectFavoritos();return a?(t.status=200,t.message=a):(t.status=404,t.message=o.NOT_FOUND_DB),t},listarPromocoes:async()=>{let t={};const a=await n.selectPromocoes();return a?(t.status=200,t.message=a):(t.status=404,t.message=o.NOT_FOUND_DB),t},deletarProduto:async t=>{if(null==t||""==t)return{status:400,message:o.REQUIRED_ID};const a=await n.selectProdutoById(t);console.log(a);let e=!1;if(a){0==a[0].ativo&&(e=!0);return await n.deletarProdutoUpdate(t,e)?{status:200,message:s.UPDATE_ITEM}:{status:500,message:o.INTERNAL_ERROR_DB}}return{status:404,message:o.NOT_FOUND_DB}},adicionarFavorito:async t=>{if(null==t||""==t)return{status:400,message:o.REQUIRED_ID};const a=await n.selectProdutoById(t);if(a){return await n.addFavorite(t,a[0].favoritos)?{status:200,message:s.UPDATE_ITEM}:{status:500,message:o.INTERNAL_ERROR_DB}}return{status:404,message:o.NOT_FOUND_DB}},listarInativos:async t=>{let a={},e=await n.getAllInativos(t);return e?(a.status=200,a.message=e):(a.status=404,a.message=o.NOT_FOUND_DB),a},inserirTamanho:async t=>{if(null==t.preco||""==t.preco||null==t.desconto||""==t.desconto||null==t.id||""==t.id||null==t.id_tamanho||""==t.id_tamanho)return{status:400,message:o.REQUIRED_FIELDS};if(await n.selectProdutoById(t.id)){return await i.inserirProdutoTamanhoProdutoExistente(t)?{status:200,message:s.INSERT_ITEM}:{status:500,message:o.INTERNAL_ERROR_DB}}return{status:404,message:o.NOT_FOUND_DB}},deletarProdutoTamanho:async(t,a)=>{if(null==t||""==t||null==t||""==t)return{status:400,message:o.REQUIRED_ID};if(await n.selectProdutoById(t)){return await i.deleteProdutoTamanho(t,a)?{status:200,message:s.DELETE_ITEM}:{status:500,message:o.INTERNAL_ERROR_DB}}}}},function(t,a,e){const{PrismaClient:o}=e(1),s=new o;t.exports={selectAllPizzas:async()=>{const t=await s.$queryRawUnsafe("select tbl_tamanho.nome as tamanho, tbl_produto.favoritos, tbl_produto.ativo as stat, round(tbl_produto_tamanho.preco, 2) as preco, tbl_produto_tamanho.desconto, tbl_produto.nome, tbl_produto.descricao, tbl_produto.imagem, tbl_tipo_pizza.tipo, tbl_produto.id as id_produto, round(tbl_produto_tamanho.preco - (tbl_produto_tamanho.preco / tbl_produto_tamanho.desconto), 2) as preco_desconto, tbl_pizza.id as id_pizza from tbl_produto\n\tinner join tbl_pizza on tbl_produto.id = tbl_pizza.id_produto\n    inner join tbl_produto_tamanho on tbl_produto_tamanho.id_produto = tbl_produto.id\n    inner join tbl_tamanho on tbl_tamanho.id = tbl_produto_tamanho.id_tamanho\n    inner join tbl_tipo_pizza on tbl_tipo_pizza.id = tbl_pizza.id_tipo_pizza\n    where tbl_produto.ativo = true;");return t.length>0&&t},selectAllBebidas:async()=>{const t=await s.$queryRawUnsafe("select tbl_tamanho.nome as tamanho, tbl_produto.favoritos, tbl_produto.ativo as stat, round(tbl_produto_tamanho.preco,2) as preco, tbl_produto_tamanho.desconto, tbl_produto.nome, tbl_produto.descricao, tbl_produto.imagem, tbl_tipo_bebida.tipo, tbl_produto.id as id_produto, tbl_bebida.id as id_bebida, round(tbl_produto_tamanho.preco - (tbl_produto_tamanho.preco / tbl_produto_tamanho.desconto), 2) as preco_desconto, tbl_bebida.teor_alcoolico from tbl_produto\n\tinner join tbl_bebida on tbl_produto.id = tbl_bebida.id_produto\n    inner join tbl_produto_tamanho on tbl_produto_tamanho.id_produto = tbl_produto.id\n    inner join tbl_tamanho on tbl_tamanho.id = tbl_produto_tamanho.id_tamanho\n    inner join tbl_tipo_bebida on tbl_tipo_bebida.id = tbl_bebida.id_tipo_bebida\n    where tbl_produto.ativo = true;");return t.length>0&&t},selectLastIdProduto:async()=>{const t=await s.$queryRawUnsafe("select id from tbl_produto order by id desc limit 1");return!!t&&t[0].id},insertPizza:async t=>{try{const a=`insert into tbl_pizza(id_produto, id_tipo_pizza) \n                            values(${t.id_produto}, ${t.id_tipo_pizza})`;return!!await s.$executeRawUnsafe(a)}catch(t){return!1}},insertProduto:async t=>{try{const a=`insert into tbl_produto(nome, descricao, imagem, ativo, favoritos)\n                            values('${t.nome}', '${t.descricao}', '${t.imagem}', true, 0)`;return!!await s.$executeRawUnsafe(a)}catch(t){return!1}},deleteProduto:async t=>{try{const a="delete from tbl_produto where id = "+t;return!!await s.$executeRawUnsafe(a)}catch(t){return!1}},insertBebida:async t=>{try{const a=`insert into tbl_bebida(id_produto, id_tipo_bebida, teor_alcoolico) \n                        values(${t.id_produto}, ${t.id_tipo_bebida}, ${t.teor_alcoolico})`;return!!await s.$executeRawUnsafe(a)}catch(t){return!1}},updatePizza:async t=>{try{const a=`update tbl_pizza set id_produto = ${t.id_produto}, id_tipo_pizza = ${t.id_tipo_pizza} where id = ${t.id_pizza}`;return!!await s.$executeRawUnsafe(a)}catch(t){return!1}},selectPizzaById:async t=>{const a="select tbl_produto.nome, tbl_produto.imagem, tbl_produto.descricao, tbl_produto_tamanho.desconto, tbl_produto.favoritos, round(tbl_produto_tamanho.preco, 2) as preco, tbl_tamanho.nome as tamanho, tbl_tamanho.id as id_tamanho, tbl_tipo_pizza.tipo, tbl_pizza.id as id_pizza, tbl_produto.id as id_produto, tbl_produto_tamanho.id as id_tamanho_pizza  \n    from tbl_pizza \n        inner join tbl_produto on tbl_pizza.id_produto = tbl_produto.id \n        inner join tbl_produto_tamanho on tbl_produto_tamanho.id_produto = tbl_produto.id\n        inner join tbl_tamanho on tbl_tamanho.id = tbl_produto_tamanho.id_tamanho\n        inner join tbl_tipo_pizza on tbl_tipo_pizza.id = tbl_pizza.id_tipo_pizza \n    where tbl_pizza.id = "+t,e=await s.$queryRawUnsafe(a);return e.length>0&&e},updateProduto:async t=>{try{const a=`update tbl_produto set nome = '${t.nome}', descricao = '${t.descricao}', imagem = '${t.imagem}' where id = ${t.id_produto}`;return!!await s.$executeRawUnsafe(a)}catch(t){return!1}},updateTamanho:async t=>{try{const a=`update tbl_produto_tamanho set preco = ${t.preco}, desconto = ${t.desconto} where id_produto = ${t.id_produto} and id_tamanho = ${t.id_tamanho}`;return!!await s.$executeRawUnsafe(a)}catch(t){return!1}},selectBebidaById:async t=>{const a=`select tbl_produto.nome, tbl_produto.imagem, tbl_produto.descricao, tbl_produto_tamanho.desconto, tbl_produto.favoritos, round(tbl_produto_tamanho.preco, 2) as preco, tbl_tamanho.nome as tamanho, tbl_tamanho.id as id_tamanho, tbl_tipo_bebida.tipo, tbl_bebida.id as id_bebida, tbl_produto.id as id_produto, tbl_produto_tamanho.id as id_tamanho_bebida  \n    from tbl_bebida \n        inner join tbl_produto on tbl_bebida.id_produto = tbl_produto.id \n        inner join tbl_produto_tamanho on tbl_produto_tamanho.id_produto = tbl_produto.id\n        inner join tbl_tamanho on tbl_tamanho.id = tbl_produto_tamanho.id_tamanho\n        inner join tbl_tipo_bebida on tbl_tipo_bebida.id = tbl_bebida.id_tipo_bebida\n    where tbl_bebida.id = ${t};`,e=await s.$queryRawUnsafe(a);return e.length>0&&e},updateBebida:async t=>{try{const a=`update tbl_bebida set id_produto = ${t.id_produto}, id_tipo_bebida = ${t.id_tipo_bebida}, teor_alcoolico = ${t.teor_alcoolico} where id = ${t.id_bebida}`;return!!await s.$executeRawUnsafe(a)}catch(t){return!1}},selectFavoritos:async()=>{const t=await s.$queryRawUnsafe("select tbl_produto.nome, tbl_produto.imagem, tbl_produto.descricao, tbl_produto_tamanho.desconto, tbl_produto.favoritos, round(tbl_produto_tamanho.preco, 2) as preco, tbl_tamanho.nome as tamanho\n    from tbl_produto \n        inner join tbl_produto_tamanho on tbl_produto_tamanho.id_produto = tbl_produto.id\n        inner join tbl_tamanho on tbl_tamanho.id = tbl_produto_tamanho.id_tamanho \n    where tbl_produto.favoritos > 0 and tbl_produto.ativo = true order by tbl_produto.favoritos desc limit 10\n    ");return t.length>0&&t},selectPromocoes:async()=>{const t=await s.$queryRawUnsafe("select tbl_produto.nome, tbl_produto.imagem, tbl_produto.descricao, tbl_produto_tamanho.desconto, tbl_produto.favoritos, round(tbl_produto_tamanho.preco, 2) as preco, tbl_tamanho.nome as tamanho, round(tbl_produto_tamanho.preco - (tbl_produto_tamanho.preco / tbl_produto_tamanho.desconto), 2) as preco_desconto\n    from tbl_produto \n        inner join tbl_produto_tamanho on tbl_produto_tamanho.id_produto = tbl_produto.id\n        inner join tbl_tamanho on tbl_tamanho.id = tbl_produto_tamanho.id_tamanho \n    where tbl_produto_tamanho.desconto > 0 and tbl_produto.ativo = true order by tbl_produto_tamanho.desconto desc limit 20;");return t.length>0&&t},deletarProdutoUpdate:async(t,a)=>{const e=`update tbl_produto set ativo = ${a} where id = ${t}`;return!!await s.$executeRawUnsafe(e)},selectProdutoById:async t=>{const a="select * from tbl_produto where id = "+t,e=await s.$queryRawUnsafe(a);return e.length>0&&e},addFavorite:async(t,a)=>{const e=`update tbl_produto set favoritos = ${a+1} where id = ${t}`;return!!await s.$executeRawUnsafe(e)},getAllInativos:async t=>{const a=`select tbl_tamanho.nome as tamanho, tbl_produto.ativo as stat, tbl_produto.favoritos, round(tbl_produto_tamanho.preco,2) as preco, tbl_produto_tamanho.desconto, tbl_produto.nome, tbl_produto.descricao, tbl_produto.imagem, tbl_tipo_${t}.tipo, tbl_produto.id as id_produto, tbl_${t}.id as id_${t}, round(tbl_produto_tamanho.preco - (tbl_produto_tamanho.preco / tbl_produto_tamanho.desconto), 2) as preco_desconto from tbl_produto\n\tinner join tbl_${t} on tbl_produto.id = tbl_${t}.id_produto\n    inner join tbl_produto_tamanho on tbl_produto_tamanho.id_produto = tbl_produto.id\n    inner join tbl_tamanho on tbl_tamanho.id = tbl_produto_tamanho.id_tamanho\n    inner join tbl_tipo_${t} on tbl_tipo_${t}.id = tbl_${t}.id_tipo_${t}\n    where tbl_produto.ativo = false;`,e=await s.$queryRawUnsafe(a);return e.length>0&&e}}},function(t,a,e){const{PrismaClient:o}=e(1),s=new o;t.exports={inserirProdutoTamanho:async t=>{try{const a=`insert into tbl_produto_tamanho(preco, desconto, id_tamanho, id_produto)\n                            values('${t.id_tamanho.preco}', '${t.desconto}', '${t.id_tamanho.id}', '${t.id_produto}')`;return!!await s.$executeRawUnsafe(a)}catch(t){return!1}},deleteProdutoTamanho:async(t,a)=>{const e=`delete from tbl_produto_tamanho where id_produto = ${t} and id_tamanho = ${a};`;return!!await s.$executeRawUnsafe(e)},inserirProdutoTamanhoProdutoExistente:async t=>{try{const a=`insert into tbl_produto_tamanho(preco, desconto, id_tamanho, id_produto)\n                            values('${t.preco}', '${t.desconto}', '${t.id_tamanho}', '${t.id}')`;return!!await s.$executeRawUnsafe(a)}catch(t){return!1}}}},function(t,a,e){const{MESSAGE_ERROR:o,MESSAGE_SUCCESS:s}=e(0);t.exports={listarTamanhos:async()=>{let t={};const{getAllTamanhos:a}=e(16),s=await a();return s?(t.message=s,t.status=200):(t.message=o.NOT_FOUND_DB,t.status=404),t}}},function(t,a,e){const{PrismaClient:o}=e(1),s=new o;t.exports={getAllTamanhos:async()=>{const t=await s.$queryRawUnsafe("select * from tbl_tamanho");return t.length>0&&t}}},function(t,a,e){const{PrismaClient:o}=e(1),s=new o;t.exports={selectAllUsers:async()=>{const t=await s.$queryRawUnsafe("select id, login from tbl_usuario order by id desc");return t.length>0&&t},insertUser:async t=>{try{let a=`insert into tbl_usuario(senha, login)\n                        values( \n                            md5('${t.senha}'),\n                            '${t.login}'\n                        )`;return!!await s.$executeRawUnsafe(a)}catch(t){return!1}},deleteUser:async t=>{try{let a=`delete from tbl_usuario\n                                where id = '${t}'`;console.log(a);return!!await s.$executeRawUnsafe(a)}catch(t){return!1}},selectUserById:async function(t){let a="select  \n                                       id,\n                                        login,\n                                        senha\n                                            from tbl_usuario\n                                                  where id = "+t;const e=await s.$queryRawUnsafe(a);return e.length>0&&e},updateUser:async function(t){try{let a=`update tbl_usuario set\n                                        login  = '${t.login}',\n                                        senha = md5('${t.senha}') where id = ${t.id}\n                                         `;return!!await s.$executeRawUnsafe(a)}catch(t){return!1}},autenticateUser:async t=>{const a=`select login, id from tbl_usuario where senha = md5('${t.senha}') and login = '${t.login}'`,e=await s.$queryRawUnsafe(a);return e.length>0&&e},searchLogin:async t=>{const a=`select * from tbl_usuario where login = '${t}'`;return(await s.$queryRawUnsafe(a)).length>0}}},function(t,a){t.exports=require("jsonwebtoken")}]));